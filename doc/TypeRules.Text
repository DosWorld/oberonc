Type rules:

A) Equal types
 Two types Ta and Tb are equal if
 1. Ta and Tb are the same type, or
 2. Ta and Tb are open array types with equal element types, or
 3. Ta and Tb are procedure types whose formal parameter lists match.

B) Matching formal parameter lists
 Two formal parameter lists match if
 1. they have the same number of parameters, and
 2. they have either the same function result type or none, and
 3. parameters at corresponding positions have equal types, and
 4. parameters at corresponding positions are both either value or variable
    parameters.

C) Assignment compatible
An expression e of type Te is assignment compatible with a variable v of type
Tv if one of the following conditions hold:
1. Te and Tv are the same type;
2. Te and Tv are record types and Te is an extension of Tv and the dynamic type
   of v is Tv ;
3. Te and Tv are pointer types and Te is an extension of Tv ;
4. Tv is a pointer or a procedure type and e is NIL;
5. Tv is ARRAY n OF CHAR, e is a string constant with m characters or an
   ARRAY m OF CHAR , and m < n;
6. Tv is ARRAY n OF Ta, e is ARRAY OF Tb where Ta and Tb are the same type;
7. Tv is a procedure type and Te is a procedure type whose formal parameters
   match those of Tv.

Let Tf be the type of a formal parameter f (not an open array) and Ta the type
of the corresponding actual parameter a:
  E) For variable parameters, Ta must be the same as Tf , or Tf must be a record
     type and Ta an extension of Tf
  F) For value parameters, a must be assignment compatible with f (see C)).

G) If Tf is an open array, then a must be array compatible with f (see D)).
   The lengths of f are taken from a.
H) If f is a parameter of type ARRAY m OF BYTE and Ta is any type with size
   n = m.

D) Array compatible
An actual parameter a of type Ta is array compatible with a formal parameter f
of type Tf if
1. Tf and Ta are the same type, or
2. Tf is an open array, Ta is any array, and their element types are array
   compatible, or
3. f is a parameter of type ARRAY OF CHAR and a is a string.

I) Same types
Two variables a and b with types Ta and Tb are of the same type if
1. Ta and Tb are both denoted by the same type identifier, or
2. Ta is declared to equal Tb in a type declaration of the form Ta = Tb , or
3. a and b appear in the same identifier list in a variable, record field, or
   formal parameter declaration and are not open arrays.
4. Ta and Tb are array types with same element types and length.

J) RETURN expression
The type of the expression must be assignment compatible with the result type
specified in the procedure heading and can be neither a record nor an array.

K) The type BYTE is compatible with the type INTEGER, and vice-versa.

L) A string of length 1 can be used wherever a character constant is allowed and
   vice versa.
